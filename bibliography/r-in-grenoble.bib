@online{fetzer2020,
  title = {Does {{Contact Tracing Work}}? {{Quasi-Experimental Evidence}} from an {{Excel Error}} in {{England}}},
  shorttitle = {Does {{Contact Tracing Work}}?},
  author = {Fetzer, Thiemo and Graeber, Thomas},
  date = {2020-12-15},
  eprinttype = {medRxiv},
  pages = {2020.12.10.20247080},
  doi = {10.1101/2020.12.10.20247080},
  url = {https://www.medrxiv.org/content/10.1101/2020.12.10.20247080v1},
  urldate = {2023-03-07},
  abstract = {Contact tracing has been a central pillar of the public health response to the COVID-19 pandemic. Yet, contact tracing measures face substantive challenges in practice and well-identified evidence about their effectiveness remains scarce. This paper exploits quasi-random variation in COVID-19 contact tracing. Between September 25 and October 2, 2020, a total of 15,841 COVID-19 cases in England (around 15 to 20\% of all cases) were not immediately referred to the contact tracing system due to a data processing error. Case information had been truncated from an Excel spreadsheet due to a row limit, which was discovered on October 3. There is substantial variation in the degree to which different parts of England areas were exposed – by chance – to delayed referrals of COVID-19 cases to to the contact tracing system. We show that more affected areas subsequently experienced a drastic rise in new COVID-19 infections and deaths alongside an increase in the positivity rate and the number of test performed, as well as a decline in the performance of the contact tracing system. Conservative estimates suggest that the failure of timely contact tracing due to the data glitch is associated with more than 125,000 additional infections and over 1,500 additional COVID-19-related deaths. Our findings provide strong quasi-experimental evidence for the effectiveness of contact tracing.},
  langid = {english},
  pubstate = {preprint},
  file = {/home/ngusarov/Zotero/storage/C8XGFF5L/Fetzer et Graeber - 2020 - Does Contact Tracing Work Quasi-Experimental Evid.pdf}
}

@inproceedings{li2021a,
  title = {Understanding and {{Detecting Performance Bugs}} in {{Markdown Compilers}}},
  booktitle = {2021 36th {{IEEE}}/{{ACM International Conference}} on {{Automated Software Engineering}} ({{ASE}})},
  author = {Li, Penghui and Liu, Yinxi and Meng, Wei},
  date = {2021-11},
  pages = {892--904},
  issn = {2643-1572},
  doi = {10.1109/ASE51524.2021.9678611},
  abstract = {Markdown compilers are widely used for translating plain Markdown text into formatted text, yet they suffer from performance bugs that cause performance degradation and resource exhaustion. Currently, there is little knowledge and understanding about these performance bugs in the wild. In this work, we first conduct a comprehensive study of known performance bugs in Markdown compilers. We identify that the ways Markdown compilers handle the language’s context-sensitive features are the dominant root cause of performance bugs. To detect unknown performance bugs, we develop MdPerfFuzz, a fuzzing framework with a syntax-tree based mutation strategy to efficiently generate test cases to manifest such bugs. It equips an execution trace similarity algorithm to de-duplicate the bug reports. With MdPerfFuzz, we successfully identified 216 new performance bugs in real-world Markdown compilers and applications. Our work demonstrates that the performance bugs are a common, severe, yet previously overlooked security problem.},
  eventtitle = {2021 36th {{IEEE}}/{{ACM International Conference}} on {{Automated Software Engineering}} ({{ASE}})},
  keywords = {Computer bugs,Degradation,Domain specific languages,Fuzzing,Security,Software engineering,Systematics}
}

@book{mailund2019,
  title = {Introducing {{Markdown}} and {{Pandoc}}: {{Using Markup Language}} and {{Document Converter}}},
  shorttitle = {Introducing {{Markdown}} and {{Pandoc}}},
  author = {Mailund, Thomas},
  date = {2019},
  publisher = {{Apress}},
  location = {{Berkeley, CA}},
  doi = {10.1007/978-1-4842-5149-2},
  url = {http://link.springer.com/10.1007/978-1-4842-5149-2},
  urldate = {2023-03-07},
  isbn = {978-1-4842-5148-5 978-1-4842-5149-2},
  langid = {english},
  keywords = {annotate,converter,document,markdown,markup,open source,pandoc,process,programming,source,tech,text},
  file = {/home/ngusarov/Zotero/storage/WL3TD3L9/Mailund - 2019 - Introducing Markdown and Pandoc Using Markup Lang.pdf}
}

@article{mccullough2005,
  title = {On the Accuracy of Statistical Procedures in {{Microsoft Excel}} 2003},
  author = {McCullough, B. D. and Wilson, Berry},
  date = {2005-06-15},
  journaltitle = {Computational Statistics \& Data Analysis},
  shortjournal = {Computational Statistics \& Data Analysis},
  volume = {49},
  number = {4},
  pages = {1244--1252},
  issn = {0167-9473},
  doi = {10.1016/j.csda.2004.06.016},
  url = {https://www.sciencedirect.com/science/article/pii/S0167947304002026},
  urldate = {2023-03-07},
  abstract = {Some of the problems that rendered Excel 97, Excel 2000 and Excel 2002 unfit for use as a statistical package have been fixed in Excel 2003, though some have not. Additionally, in fixing some errors, Microsoft introduced other errors. Excel's new and improved random number generator, at default, is supposed to produce uniform numbers on the interval (0,1); but it also produces negative numbers. Excel 2003 is an improvement over previous versions, but not enough has been done that its use for statistical purposes can be recommended.},
  langid = {english},
  keywords = {Benchmarks,Software,Strd,TestU01},
  file = {/home/ngusarov/Zotero/storage/842Y2IIZ/S0167947304002026.html}
}

@article{mccullough2008,
  title = {On the Accuracy of Statistical Procedures in {{Microsoft Excel}} 2007},
  author = {McCullough, B. D. and Heiser, David A.},
  date = {2008-06-15},
  journaltitle = {Computational Statistics \& Data Analysis},
  shortjournal = {Computational Statistics \& Data Analysis},
  volume = {52},
  number = {10},
  pages = {4570--4578},
  issn = {0167-9473},
  doi = {10.1016/j.csda.2008.03.004},
  url = {https://www.sciencedirect.com/science/article/pii/S0167947308001606},
  urldate = {2023-03-07},
  abstract = {Excel 2007, like its predecessors, fails a standard set of intermediate-level accuracy tests in three areas: statistical distributions, random number generation, and estimation. Additional errors in specific Excel procedures are discussed. Microsoft’s continuing inability to correctly fix errors is discussed. No statistical procedure in Excel should be used until Microsoft documents that the procedure is correct; it is not safe to assume that Microsoft Excel’s statistical procedures give the correct answer. Persons who wish to conduct statistical analyses should use some other package.},
  langid = {english}
}

@book{xie2020,
  title = {R {{Markdown Cookbook}}},
  author = {Xie, Yihui and Dervieux, Christophe and Riederer, Emily},
  date = {2020-10-20},
  publisher = {{Chapman and Hall/CRC}},
  location = {{New York}},
  doi = {10.1201/9781003097471},
  abstract = {This new book written by the developers of R Markdown is an essential reference that will help users learn and make full use of the software.  Those new to R Markdown will appreciate the short, practical examples that address the most common issues users encounter. Frequent users will also benefit from the wide ranging tips and tricks that expose ‘hidden’ features, support customization and demonstrate the many new and varied applications of the software.  After reading this book users will learn how to: Enhance your R Markdown content with diagrams, citations, and dynamically generated text Streamline your workflow with child documents, code chunk references, and caching Control the formatting and layout with Pandoc markdown syntax or by writing custom HTML and LaTeX templates Utilize chunk options and hooks to fine-tune how your code is processed Switch between different language engineers to seamlessly incorporate python, D3, and more into your analysis},
  isbn = {978-1-00-309747-1},
  pagetotal = {360}
}

@article{zeeberg2004,
  title = {Mistaken {{Identifiers}}: {{Gene}} Name Errors Can Be Introduced Inadvertently When Using {{Excel}} in Bioinformatics},
  shorttitle = {Mistaken {{Identifiers}}},
  author = {Zeeberg, Barry R. and Riss, Joseph and Kane, David W. and Bussey, Kimberly J. and Uchio, Edward and Linehan, W. Marston and Barrett, J. Carl and Weinstein, John N.},
  date = {2004-12},
  journaltitle = {BMC Bioinformatics},
  shortjournal = {BMC Bioinformatics},
  volume = {5},
  number = {1},
  pages = {1--6},
  publisher = {{BioMed Central}},
  issn = {1471-2105},
  doi = {10.1186/1471-2105-5-80},
  url = {https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-5-80},
  urldate = {2023-03-07},
  abstract = {When processing microarray data sets, we recently noticed that some gene names were being changed inadvertently to non-gene names. A little detective work traced the problem to default date format conversions and floating-point format conversions in the very useful Excel program package. The date conversions affect at least 30 gene names; the floating-point conversions affect at least 2,000 if Riken identifiers are included. These conversions are irreversible; the original gene names cannot be recovered. Users of Excel for analyses involving gene names should be aware of this problem, which can cause genes, including medically important ones, to be lost from view and which has contaminated even carefully curated public databases. We provide work-arounds and scripts for circumventing the problem.},
  issue = {1},
  langid = {english},
  file = {/home/ngusarov/Zotero/storage/RWYM68X8/Zeeberg et al. - 2004 - Mistaken Identifiers Gene name errors can be intr.pdf}
}
